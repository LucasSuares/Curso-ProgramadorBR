/* <<<<<<<<<<<<<<<<<<<<<<<<< AULA SOBRE PSEUDO ELEMENTOS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* P::first-line{
    color:blueviolet;
} */

h1::first-letter{
    color: chartreuse;
    font-size: 80px;
}

li{
    list-style: none;
    /* list-style-image: url(../image/currency-dollar-circle.png);
    margin-left: 1000px; */
}
/* li::after */
li::before{
    /* content: "+";  ⏪ Exmpl*/
    content: " ";
    display: inline-block;
    width: 30px;
    height: 30px;
    background-image: url(../image/currency-dollar-circle.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
}

/* All CSS Pseudo Elements
Selector- Example -	Example description
::after	p::after	Insert content after every <p> element
::before	p::before	Insert content before every <p> element
::first-letter	p::first-letter	Selects the first letter of every <p> element
::first-line	p::first-line	Selects the first line of every <p> element
::selection	p::selection	Selects the portion of an element that is selected by a user */

/* <<<<<<<<<<<<<<<<<<<<<<<<< AULA SOBRE SELETORES >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* O asterisco (*) é um seletor que pega todos os elementos da página */

/* exemplos com =     ,      +      " "      >     ~     */

/* posso utilizar colchetes [] para selecionar atributos Ex.:
[width]{ 

}  irá selecionar todos os elementos que tiverem esse atributo*/

/* <<<<<<<<<<<<<<<<<<<<<<<<< AULA SOBRE PSEUDO CLASSES >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

/* All CSS Pseudo Classes
Selector - Example	- Example description
:active	a:active	Selects the active link
:checked	input:checked	Selects every checked <input> element
:disabled	input:disabled	Selects every disabled <input> element
:empty	p:empty	Selects every <p> element that has no children
:enabled	input:enabled	Selects every enabled <input> element
:first-child	p:first-child	Selects every <p> elements that is the first child of its parent
:first-of-type	p:first-of-type	Selects every <p> element that is the first <p> element of its parent
:focus	input:focus	Selects the <input> element that has focus
:hover	a:hover	Selects links on mouse over
:in-range	input:in-range	Selects <input> elements with a value within a specified range
:invalid	input:invalid	Selects all <input> elements with an invalid value
:lang(language)	p:lang(it)	Selects every <p> element with a lang attribute value starting with "it"
:last-child	p:last-child	Selects every <p> elements that is the last child of its parent
:last-of-type	p:last-of-type	Selects every <p> element that is the last <p> element of its parent
:link	a:link	Selects all unvisited links
:not(selector)	:not(p)	Selects every element that is not a <p> element
:nth-child(n)	p:nth-child(2)	Selects every <p> element that is the second child of its parent
:nth-last-child(n)	p:nth-last-child(2)	Selects every <p> element that is the second child of its parent, counting from the last child
:nth-last-of-type(n)	p:nth-last-of-type(2)	Selects every <p> element that is the second <p> element of its parent, counting from the last child
:nth-of-type(n)	p:nth-of-type(2)	Selects every <p> element that is the second <p> element of its parent
:only-of-type	p:only-of-type	Selects every <p> element that is the only <p> element of its parent
:only-child	p:only-child	Selects every <p> element that is the only child of its parent
:optional	input:optional	Selects <input> elements with no "required" attribute
:out-of-range	input:out-of-range	Selects <input> elements with a value outside a specified range
:read-only	input:read-only	Selects <input> elements with a "readonly" attribute specified
:read-write	input:read-write	Selects <input> elements with no "readonly" attribute
:required	input:required	Selects <input> elements with a "required" attribute specified
:root	root	Selects the document's root element
:target	#news:target	Selects the current active #news element (clicked on a URL containing that anchor name)
:valid	input:valid	Selects all <input> elements with a valid value
:visited	a:visited	Selects all visited links */


/* <<<<<<<<<<<<<<<<<<<<<<<<< AULA SOBRE FUNÇÃO CALC CSS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

body{
    margin: 0;
    padding: 0;
}
.container{
    background-color: coral;
    width: 100%;
    height: 200px;
}

.div-child{
    background-color: cornflowerblue;
    width: calc(100% - 200px);
    height: 200px;
    margin: auto;
}

/* <<<<<<<<<<<<<<<<<<<<<<<<< AULA SOBRE TRANSFORMAÇÕES >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

img{
    width: 200px;
    height: 200px;
    padding: 100px;
    transform: rotate(45deg) scale(0.5);
}

/* <<<<<<<<<<<<<<<<<<<<<<<<< AULA SOBRE VARIÁVEIS NO CSS >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> */

:root{
    --color: lightgreen;
    --square-size: 300px
}

.p2{
    font-size: 50px;
    color: var(--color);
}

.p4{
    color: var(--color);
    font-family: 'Courier New', Courier, monospace;
    font-size: 60px;
}

.sqr1{
    display: inline-block;
    background-color:darkseagreen;
    width: var(--square-size);
    height: var(--square-size);
}

.sqr2{
    float: right;
    background-color:crimson;
    width: var(--square-size);
    height: var(--square-size);
}
